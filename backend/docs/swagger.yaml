definitions:
  models.ChangePasswordRequest:
    properties:
      new_password:
        example: newpassword123
        minLength: 6
        type: string
      old_password:
        example: oldpassword123
        type: string
    required:
    - new_password
    - old_password
    type: object
  models.CreateProjectRequest:
    properties:
      requirements:
        example: 项目需求描述
        type: string
    required:
    - requirements
    type: object
  models.CreateTagRequest:
    properties:
      color:
        example: '#666666'
        type: string
      name:
        example: 标签名称
        maxLength: 50
        minLength: 1
        type: string
    required:
    - name
    type: object
  models.CreateTaskRequest:
    properties:
      deadline:
        type: string
      dependencies:
        example:
        - '[''task1'''
        - ' ''task2'']'
        items:
          type: string
        type: array
      description:
        example: 任务描述
        maxLength: 500
        type: string
      max_retries:
        example: 3
        maximum: 10
        minimum: 0
        type: integer
      metadata:
        example: 元数据
        type: string
      name:
        example: 任务名称
        maxLength: 100
        minLength: 1
        type: string
      priority:
        example: 2
        maximum: 4
        minimum: 1
        type: integer
      project_id:
        example: uuid
        type: string
      retry_delay:
        example: 60
        minimum: 0
        type: integer
      tags:
        example:
        - '[''tag1'''
        - ' ''tag2'']'
        items:
          type: string
        type: array
    required:
    - name
    - project_id
    type: object
  models.ErrorResponse:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: 请求参数错误
        type: string
      timestamp:
        example: "2025-08-29T10:00:00Z"
        type: string
    type: object
  models.LoginRequest:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: password123
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  models.LoginResponse:
    properties:
      access_token:
        type: string
      expires_in:
        example: 3600
        type: integer
      refresh_token:
        type: string
      user:
        $ref: '#/definitions/models.UserInfo'
    type: object
  models.PaginationResponse:
    properties:
      data: {}
      has_next:
        example: true
        type: boolean
      has_previous:
        example: false
        type: boolean
      page:
        example: 1
        type: integer
      page_size:
        example: 10
        type: integer
      total:
        example: 100
        type: integer
      total_pages:
        example: 10
        type: integer
    type: object
  models.ProjectInfo:
    properties:
      backend_port:
        example: 8080
        type: integer
      created_at:
        type: string
      description:
        example: 项目描述
        type: string
      frontend_port:
        example: 3000
        type: integer
      id:
        example: uuid
        type: string
      name:
        example: 项目名称
        type: string
      project_path:
        example: /path/to/project
        type: string
      requirements:
        example: 项目需求
        type: string
      status:
        example: in_progress
        type: string
      tags:
        items:
          $ref: '#/definitions/models.TagInfo'
        type: array
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.UserInfo'
      user_id:
        example: uuid
        type: string
    type: object
  models.RegisterRequest:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: password123
        minLength: 6
        type: string
      username:
        example: username
        maxLength: 20
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  models.Response:
    properties:
      code:
        example: 0
        type: integer
      data: {}
      message:
        example: success
        type: string
      timestamp:
        example: "2025-08-29T10:00:00Z"
        type: string
    type: object
  models.TagInfo:
    properties:
      color:
        example: '#666666'
        type: string
      id:
        example: uuid
        type: string
      name:
        example: 标签名称
        type: string
    type: object
  models.TaskInfo:
    properties:
      completed_at:
        type: string
      created_at:
        type: string
      deadline:
        type: string
      dependencies:
        example:
        - '[''task1'''
        - ' ''task2'']'
        items:
          type: string
        type: array
      description:
        example: 任务描述
        type: string
      error_message:
        example: 错误信息
        type: string
      id:
        example: uuid
        type: string
      max_retries:
        example: 3
        type: integer
      metadata:
        example: 元数据
        type: string
      name:
        example: 任务名称
        type: string
      priority:
        example: 2
        type: integer
      project_id:
        example: uuid
        type: string
      result:
        example: 执行结果
        type: string
      retry_count:
        example: 0
        type: integer
      retry_delay:
        example: 60
        type: integer
      started_at:
        type: string
      status:
        example: pending
        type: string
      tags:
        example:
        - '[''tag1'''
        - ' ''tag2'']'
        items:
          type: string
        type: array
      updated_at:
        type: string
      user_id:
        example: uuid
        type: string
    type: object
  models.TaskLogInfo:
    properties:
      created_at:
        type: string
      data:
        example: 额外数据
        type: string
      id:
        example: uuid
        type: string
      level:
        example: info
        type: string
      message:
        example: 日志消息
        type: string
      task_id:
        example: uuid
        type: string
    type: object
  models.TaskRetryRequest:
    properties:
      force:
        description: 强制重试，忽略依赖检查
        example: false
        type: boolean
    type: object
  models.TaskRollbackRequest:
    properties:
      reason:
        example: 回滚原因
        type: string
    required:
    - reason
    type: object
  models.TaskStatusUpdateRequest:
    properties:
      error_message:
        example: 错误信息
        type: string
      result:
        example: 执行结果
        type: string
      status:
        enum:
        - pending
        - running
        - completed
        - failed
        - cancelled
        - retrying
        - rolled_back
        example: running
        type: string
    required:
    - status
    type: object
  models.UpdateProfileRequest:
    properties:
      email:
        example: newemail@example.com
        type: string
      username:
        example: newusername
        maxLength: 20
        minLength: 3
        type: string
    type: object
  models.UpdateProjectRequest:
    properties:
      backend_port:
        example: 8080
        maximum: 65535
        minimum: 1024
        type: integer
      description:
        example: 更新后的项目描述
        maxLength: 500
        type: string
      frontend_port:
        example: 3000
        maximum: 65535
        minimum: 1024
        type: integer
      name:
        example: 更新后的项目名
        maxLength: 100
        minLength: 1
        type: string
      requirements:
        example: 更新后的项目需求
        type: string
      status:
        enum:
        - draft
        - in_progress
        - completed
        - failed
        example: in_progress
        type: string
      tag_ids:
        example:
        - '[''tag1'''
        - ' ''tag2'']'
        items:
          type: string
        type: array
    type: object
  models.UpdateTagRequest:
    properties:
      color:
        example: '#FF0000'
        type: string
      name:
        example: 更新后的标签名称
        maxLength: 50
        minLength: 1
        type: string
    type: object
  models.UpdateTaskRequest:
    properties:
      deadline:
        type: string
      dependencies:
        example:
        - '[''task1'''
        - ' ''task2'']'
        items:
          type: string
        type: array
      description:
        example: 更新后的任务描述
        maxLength: 500
        type: string
      max_retries:
        example: 5
        maximum: 10
        minimum: 0
        type: integer
      metadata:
        example: 元数据
        type: string
      name:
        example: 更新后的任务名
        maxLength: 100
        minLength: 1
        type: string
      priority:
        example: 3
        maximum: 4
        minimum: 1
        type: integer
      retry_delay:
        example: 120
        minimum: 0
        type: integer
      tags:
        example:
        - '[''tag1'''
        - ' ''tag2'']'
        items:
          type: string
        type: array
    type: object
  models.UserInfo:
    properties:
      created_at:
        type: string
      email:
        example: user@example.com
        type: string
      id:
        example: uuid
        type: string
      role:
        example: user
        type: string
      status:
        example: active
        type: string
      username:
        example: username
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: 用户登录并获取访问令牌
      parameters:
      - description: 登录请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.LoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 用户登录
      tags:
      - 用户管理
  /api/v1/auth/refresh:
    post:
      consumes:
      - application/json
      description: 使用刷新令牌获取新的访问令牌
      parameters:
      - description: 刷新令牌
        in: query
        name: refresh_token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.LoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 刷新令牌
      tags:
      - 用户管理
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: 创建新用户账户
      parameters:
      - description: 注册请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.LoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 用户注册
      tags:
      - 用户管理
  /api/v1/projects:
    get:
      consumes:
      - application/json
      description: 获取项目列表，支持分页和筛选
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 项目状态
        enum:
        - draft
        - in_progress
        - completed
        - failed
        in: query
        name: status
        type: string
      - description: 搜索关键词
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取项目列表成功
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/models.PaginationResponse'
                  - properties:
                      data:
                        items:
                          $ref: '#/definitions/models.ProjectInfo'
                        type: array
                    type: object
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 获取项目列表
      tags:
      - 项目管理
    post:
      consumes:
      - application/json
      description: 创建新项目
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 项目创建请求
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/models.CreateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 项目创建成功
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.ProjectInfo'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 创建项目
      tags:
      - 项目管理
  /api/v1/projects/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定项目
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 项目ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 项目删除成功
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: 访问被拒绝
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 删除项目
      tags:
      - 项目管理
    get:
      consumes:
      - application/json
      description: 根据项目ID获取项目详细信息
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 项目ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取项目成功
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.ProjectInfo'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: 项目不存在
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 获取项目信息
      tags:
      - 项目管理
    put:
      consumes:
      - application/json
      description: 更新项目信息
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 项目ID
        in: path
        name: id
        required: true
        type: string
      - description: 项目更新请求
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 项目更新成功
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.ProjectInfo'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: 访问被拒绝
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: 项目不存在
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 更新项目
      tags:
      - 项目管理
  /api/v1/projects/{id}/status:
    put:
      consumes:
      - application/json
      description: 更新项目状态
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 项目ID
        in: path
        name: id
        required: true
        type: string
      - description: 项目状态
        enum:
        - draft
        - in_progress
        - completed
        - failed
        in: query
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 状态更新成功
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: 访问被拒绝
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 更新项目状态
      tags:
      - 项目管理
  /api/v1/projects/{id}/tags:
    get:
      consumes:
      - application/json
      description: 获取项目的所有标签
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 项目ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取项目标签成功
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.TagInfo'
                  type: array
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: 访问被拒绝
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 获取项目标签
      tags:
      - 项目管理
  /api/v1/projects/{id}/tasks:
    get:
      consumes:
      - application/json
      description: 获取指定项目的所有任务
      parameters:
      - description: 项目ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.TaskInfo'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 获取项目任务
      tags:
      - 任务管理
  /api/v1/tags:
    get:
      consumes:
      - application/json
      description: 获取所有标签列表
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取标签列表成功
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.TagInfo'
                  type: array
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 获取标签列表
      tags:
      - 标签管理
    post:
      consumes:
      - application/json
      description: 创建新标签
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 标签创建请求
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/models.CreateTagRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 标签创建成功
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.TagInfo'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: 标签名称已存在
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 创建标签
      tags:
      - 标签管理
  /api/v1/tags/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定标签
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 标签ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 标签删除成功
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: 标签正在被使用
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 删除标签
      tags:
      - 标签管理
    get:
      consumes:
      - application/json
      description: 根据标签ID获取标签详细信息
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 标签ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取标签成功
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.TagInfo'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: 标签不存在
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 获取标签信息
      tags:
      - 标签管理
    put:
      consumes:
      - application/json
      description: 更新标签信息
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 标签ID
        in: path
        name: id
        required: true
        type: string
      - description: 标签更新请求
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/models.UpdateTagRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 标签更新成功
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.TagInfo'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: 标签不存在
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: 标签名称已存在
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 更新标签
      tags:
      - 标签管理
  /api/v1/tags/popular:
    get:
      consumes:
      - application/json
      description: 获取使用频率最高的标签
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - default: 10
        description: 标签数量限制
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取热门标签成功
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.TagInfo'
                  type: array
              type: object
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 获取热门标签
      tags:
      - 标签管理
  /api/v1/tags/project:
    get:
      consumes:
      - application/json
      description: 获取指定项目的所有标签
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: 项目ID
        in: query
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取项目标签成功
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.TagInfo'
                  type: array
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 获取项目标签
      tags:
      - 标签管理
  /api/v1/tasks:
    get:
      consumes:
      - application/json
      description: 分页获取任务列表，支持过滤和搜索
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 项目ID
        in: query
        name: project_id
        type: string
      - description: 用户ID
        in: query
        name: user_id
        type: string
      - description: 任务状态
        in: query
        name: status
        type: string
      - description: 优先级
        in: query
        name: priority
        type: integer
      - collectionFormat: csv
        description: 标签
        in: query
        items:
          type: string
        name: tags
        type: array
      - description: 搜索关键词
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/models.PaginationResponse'
                  - properties:
                      data:
                        items:
                          $ref: '#/definitions/models.TaskInfo'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 获取任务列表
      tags:
      - 任务管理
    post:
      consumes:
      - application/json
      description: 创建新的任务
      parameters:
      - description: 任务信息
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.CreateTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.TaskInfo'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 创建任务
      tags:
      - 任务管理
  /api/v1/tasks/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 删除任务
      tags:
      - 任务管理
    get:
      consumes:
      - application/json
      description: 根据任务ID获取任务详细信息
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.TaskInfo'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 获取任务详情
      tags:
      - 任务管理
    put:
      consumes:
      - application/json
      description: 更新任务信息
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      - description: 任务更新信息
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.UpdateTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.TaskInfo'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 更新任务
      tags:
      - 任务管理
  /api/v1/tasks/{id}/complete:
    post:
      consumes:
      - application/json
      description: 标记任务为完成状态
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      - description: 执行结果
        in: query
        name: result
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 完成任务
      tags:
      - 任务管理
  /api/v1/tasks/{id}/dependencies:
    get:
      consumes:
      - application/json
      description: 获取指定任务的依赖任务列表
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.TaskInfo'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 获取任务依赖
      tags:
      - 任务管理
  /api/v1/tasks/{id}/logs:
    get:
      consumes:
      - application/json
      description: 获取指定任务的执行日志
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      - description: 日志级别
        enum:
        - info
        - warn
        - error
        in: query
        name: level
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.TaskLogInfo'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 获取任务日志
      tags:
      - 任务管理
  /api/v1/tasks/{id}/retry:
    post:
      consumes:
      - application/json
      description: 重试失败的任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      - description: 重试参数
        in: body
        name: retry
        required: true
        schema:
          $ref: '#/definitions/models.TaskRetryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 重试任务
      tags:
      - 任务管理
  /api/v1/tasks/{id}/rollback:
    post:
      consumes:
      - application/json
      description: 回滚已完成的任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      - description: 回滚参数
        in: body
        name: rollback
        required: true
        schema:
          $ref: '#/definitions/models.TaskRollbackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 回滚任务
      tags:
      - 任务管理
  /api/v1/tasks/{id}/start:
    post:
      consumes:
      - application/json
      description: 启动指定任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 启动任务
      tags:
      - 任务管理
  /api/v1/tasks/{id}/status:
    put:
      consumes:
      - application/json
      description: 更新任务的状态
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      - description: 状态更新信息
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/models.TaskStatusUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 更新任务状态
      tags:
      - 任务管理
  /api/v1/tasks/failed:
    get:
      consumes:
      - application/json
      description: 获取所有失败的任务
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.TaskInfo'
                  type: array
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 获取失败任务
      tags:
      - 任务管理
  /api/v1/tasks/overdue:
    get:
      consumes:
      - application/json
      description: 获取所有超期的任务
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.TaskInfo'
                  type: array
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 获取超期任务
      tags:
      - 任务管理
  /api/v1/tasks/priority/{priority}:
    get:
      consumes:
      - application/json
      description: 获取指定优先级的所有任务
      parameters:
      - description: 任务优先级
        in: path
        maximum: 4
        minimum: 1
        name: priority
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.TaskInfo'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 根据优先级获取任务
      tags:
      - 任务管理
  /api/v1/tasks/status/{status}:
    get:
      consumes:
      - application/json
      description: 获取指定状态的所有任务
      parameters:
      - description: 任务状态
        enum:
        - pending
        - running
        - completed
        - failed
        - cancelled
        - retrying
        - rolled_back
        in: path
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.TaskInfo'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 根据状态获取任务
      tags:
      - 任务管理
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: 获取用户列表（需要管理员权限）
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.PaginationResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 获取用户列表
      tags:
      - 用户管理
  /api/v1/users/{user_id}:
    delete:
      consumes:
      - application/json
      description: 删除指定用户（需要管理员权限）
      parameters:
      - description: 用户ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 删除用户
      tags:
      - 用户管理
  /api/v1/users/change-password:
    post:
      consumes:
      - application/json
      description: 修改当前用户的密码
      parameters:
      - description: 修改密码请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 修改密码
      tags:
      - 用户管理
  /api/v1/users/logout:
    post:
      consumes:
      - application/json
      description: 用户登出并清除会话
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 用户登出
      tags:
      - 用户管理
  /api/v1/users/profile:
    get:
      consumes:
      - application/json
      description: 获取当前用户的档案信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.UserInfo'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 获取用户档案
      tags:
      - 用户管理
    put:
      consumes:
      - application/json
      description: 更新当前用户的档案信息
      parameters:
      - description: 更新档案请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 更新用户档案
      tags:
      - 用户管理
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
