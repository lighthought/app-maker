// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/agent/analyse/project-brief": {
            "post": {
                "description": "根据需求生成项目简介和市场研究文档",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analyse"
                ],
                "summary": "生成项目概览",
                "parameters": [
                    {
                        "description": "项目概览请求",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GetProjBriefReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功响应",
                        "schema": {
                            "$ref": "#/definitions/utils.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "参数错误",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器错误",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/agent/architect/apidefinition": {
            "get": {
                "description": "基于PRD、数据模型和用户故事生成API接口定义",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Architect"
                ],
                "summary": "获取API定义",
                "parameters": [
                    {
                        "description": "API定义请求",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GetAPIDefinitionReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功响应",
                        "schema": {
                            "$ref": "#/definitions/utils.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "参数错误",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器错误",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/agent/architect/architect": {
            "get": {
                "description": "基于PRD和UX设计生成整体架构、前端架构和后端架构设计文档",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Architect"
                ],
                "summary": "获取架构设计",
                "parameters": [
                    {
                        "description": "架构设计请求",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GetArchitectureReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功响应",
                        "schema": {
                            "$ref": "#/definitions/utils.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "参数错误",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器错误",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/agent/architect/database": {
            "get": {
                "description": "基于PRD、架构设计和用户故事生成数据模型设计",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Architect"
                ],
                "summary": "获取数据库设计",
                "parameters": [
                    {
                        "description": "数据库设计请求",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GetDatabaseDesignReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功响应",
                        "schema": {
                            "$ref": "#/definitions/utils.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "参数错误",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器错误",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/agent/dev/deploy": {
            "post": {
                "description": "执行项目的打包部署流程",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dev"
                ],
                "summary": "部署项目",
                "parameters": [
                    {
                        "description": "部署请求",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FixBugReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功响应",
                        "schema": {
                            "$ref": "#/definitions/utils.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "参数错误",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器错误",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/agent/dev/fixbug": {
            "post": {
                "description": "根据Bug描述修复项目中的问题",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dev"
                ],
                "summary": "修复Bug",
                "parameters": [
                    {
                        "description": "修复Bug请求",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FixBugReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功响应",
                        "schema": {
                            "$ref": "#/definitions/utils.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "参数错误",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器错误",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/agent/dev/implstory": {
            "post": {
                "description": "基于PRD、架构设计和UX标准实现用户故事",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dev"
                ],
                "summary": "实现用户故事",
                "parameters": [
                    {
                        "description": "实现故事请求",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ImplementStoryReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功响应",
                        "schema": {
                            "$ref": "#/definitions/utils.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "参数错误",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器错误",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/agent/dev/runtest": {
            "post": {
                "description": "执行项目的自动测试流程",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dev"
                ],
                "summary": "运行测试",
                "parameters": [
                    {
                        "description": "运行测试请求",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FixBugReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功响应",
                        "schema": {
                            "$ref": "#/definitions/utils.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "参数错误",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器错误",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/agent/pm/prd": {
            "get": {
                "description": "根据需求生成PRD文档",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PM"
                ],
                "summary": "获取产品需求文档",
                "parameters": [
                    {
                        "description": "PRD请求",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GetPRDReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功响应",
                        "schema": {
                            "$ref": "#/definitions/utils.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "参数错误",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器错误",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/agent/po/epicsandstories": {
            "get": {
                "description": "基于PRD和架构设计生成Epics和Stories文档",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PO"
                ],
                "summary": "获取史诗和用户故事",
                "parameters": [
                    {
                        "description": "史诗故事请求",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GetEpicsAndStoriesReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功响应",
                        "schema": {
                            "$ref": "#/definitions/utils.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "参数错误",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器错误",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/agent/ux-expert/ux-standard": {
            "get": {
                "description": "基于PRD生成UX设计规范和页面提示词",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UX"
                ],
                "summary": "获取UX设计标准",
                "parameters": [
                    {
                        "description": "UX标准请求",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GetUXStandardReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功响应",
                        "schema": {
                            "$ref": "#/definitions/utils.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "参数错误",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器错误",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/health": {
            "get": {
                "description": "检查服务是否正常运行",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "健康检查"
                ],
                "summary": "健康检查",
                "responses": {
                    "200": {
                        "description": "成功响应",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/projects/setup": {
            "post": {
                "description": "为项目设置开发环境，包括安装bmad-method等工具",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "项目环境准备",
                "parameters": [
                    {
                        "description": "项目环境准备请求",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SetupProjEnvReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功响应",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "参数错误",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "500": {
                        "description": "服务器错误",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.FixBugReq": {
            "type": "object",
            "required": [
                "bug_description",
                "project_guid"
            ],
            "properties": {
                "bug_description": {
                    "type": "string",
                    "example": "bug description"
                },
                "project_guid": {
                    "type": "string",
                    "example": "1234567890"
                }
            }
        },
        "models.GetAPIDefinitionReq": {
            "type": "object",
            "required": [
                "db_folder",
                "prd_path",
                "project_guid",
                "stories_folder"
            ],
            "properties": {
                "db_folder": {
                    "type": "string",
                    "example": "docs/db"
                },
                "prd_path": {
                    "type": "string",
                    "example": "docs/PRD.md"
                },
                "project_guid": {
                    "type": "string",
                    "example": "1234567890"
                },
                "stories_folder": {
                    "type": "string",
                    "example": "docs/stories"
                }
            }
        },
        "models.GetArchitectureReq": {
            "type": "object",
            "required": [
                "prd_path",
                "project_guid",
                "template_arch_description",
                "ux_spec_path"
            ],
            "properties": {
                "prd_path": {
                    "type": "string",
                    "example": "docs/PRD.md"
                },
                "project_guid": {
                    "type": "string",
                    "example": "1234567890"
                },
                "template_arch_description": {
                    "type": "string",
                    "example": "templates/architecture-template-v2.yaml"
                },
                "ux_spec_path": {
                    "type": "string",
                    "example": "docs/ux/ux-spec.md"
                }
            }
        },
        "models.GetDatabaseDesignReq": {
            "type": "object",
            "required": [
                "arch_folder",
                "prd_path",
                "project_guid",
                "stories_folder"
            ],
            "properties": {
                "arch_folder": {
                    "type": "string",
                    "example": "docs/arch"
                },
                "prd_path": {
                    "type": "string",
                    "example": "docs/PRD.md"
                },
                "project_guid": {
                    "type": "string",
                    "example": "1234567890"
                },
                "stories_folder": {
                    "type": "string",
                    "example": "docs/stories"
                }
            }
        },
        "models.GetEpicsAndStoriesReq": {
            "type": "object",
            "required": [
                "arch_folder",
                "prd_path",
                "project_guid"
            ],
            "properties": {
                "arch_folder": {
                    "type": "string",
                    "example": "docs/arch"
                },
                "prd_path": {
                    "type": "string",
                    "example": "docs/PRD.md"
                },
                "project_guid": {
                    "type": "string",
                    "example": "1234567890"
                }
            }
        },
        "models.GetPRDReq": {
            "type": "object",
            "required": [
                "project_guid",
                "requirements"
            ],
            "properties": {
                "project_guid": {
                    "type": "string",
                    "example": "1234567890"
                },
                "requirements": {
                    "type": "string",
                    "example": "项目需求描述"
                }
            }
        },
        "models.GetProjBriefReq": {
            "type": "object",
            "required": [
                "project_guid",
                "requirements"
            ],
            "properties": {
                "project_guid": {
                    "type": "string",
                    "example": "1234567890"
                },
                "requirements": {
                    "type": "string",
                    "example": "项目需求描述"
                }
            }
        },
        "models.GetUXStandardReq": {
            "type": "object",
            "required": [
                "prd_path",
                "project_guid",
                "requirements"
            ],
            "properties": {
                "prd_path": {
                    "type": "string",
                    "example": "docs/PRD.md"
                },
                "project_guid": {
                    "type": "string",
                    "example": "1234567890"
                },
                "requirements": {
                    "type": "string",
                    "example": "项目需求描述"
                }
            }
        },
        "models.ImplementStoryReq": {
            "type": "object",
            "required": [
                "api_folder",
                "arch_folder",
                "db_folder",
                "epic_file",
                "prd_path",
                "project_guid",
                "story_file",
                "ux_spec_path"
            ],
            "properties": {
                "api_folder": {
                    "type": "string",
                    "example": "docs/api"
                },
                "arch_folder": {
                    "type": "string",
                    "example": "docs/arch"
                },
                "db_folder": {
                    "type": "string",
                    "example": "docs/db"
                },
                "epic_file": {
                    "type": "string",
                    "example": "docs/epics/epic.md"
                },
                "prd_path": {
                    "type": "string",
                    "example": "docs/PRD.md"
                },
                "project_guid": {
                    "type": "string",
                    "example": "1234567890"
                },
                "story_file": {
                    "type": "string",
                    "example": "docs/stories/story.md"
                },
                "ux_spec_path": {
                    "type": "string",
                    "example": "docs/ux/ux-spec.md"
                }
            }
        },
        "models.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {},
                "message": {
                    "type": "string",
                    "example": "success"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2025-08-29T10:00:00Z"
                }
            }
        },
        "models.SetupProjEnvReq": {
            "type": "object",
            "required": [
                "bmad_cli_type",
                "gitlab_repo_url",
                "project_guid",
                "project_id",
                "setup_bmad_method"
            ],
            "properties": {
                "bmad_cli_type": {
                    "type": "string",
                    "example": "claude"
                },
                "gitlab_repo_url": {
                    "type": "string",
                    "example": "https://gitlab.lighthought.com/app-maker/project-guid.git"
                },
                "project_guid": {
                    "type": "string",
                    "example": "1234567890"
                },
                "project_id": {
                    "type": "string",
                    "example": "1234567890"
                },
                "setup_bmad_method": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "utils.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "错误信息"
                },
                "message": {
                    "type": "string",
                    "example": "操作失败"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "utils.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "操作成功"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
